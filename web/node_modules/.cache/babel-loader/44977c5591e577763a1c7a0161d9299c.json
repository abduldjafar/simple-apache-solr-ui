{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nclass Courses extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Query, {\n      query: gql`\n      query{\n        responseHeader(row:\"7\",query:\"jokowi\"){\n          response{\n            numFound\n            docs{\n              source\n              id\n              \n            }\n          }\n        }\n      }\n    `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 3\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }\n      }, \"Loading...\");\n      if (error) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, \"Error :(\");\n      return data.responseHeader.response.docs.map(({\n        id,\n        source,\n        data\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, `${source} by ${id}`)));\n    }));\n  }\n\n}\n\nexport default Courses;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Query","gql","Paper","Grid","Courses","Component","render","loading","error","data","responseHeader","response","docs","map","id","source"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,gBAApB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;AAIA,MAAMC,OAAN,SAAsBL,KAAK,CAACM,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAE;AACR,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AACE,MAAA,KAAK,EAAEL,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAdE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAgBG,CAAC;AAAEM,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBC,MAAAA;AAAlB,KAAD,KAA8B;AAC7B,UAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACb,UAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACX,aAAOC,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BC,IAA7B,CAAkCC,GAAlC,CAAsC,CAAC;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,MAAN;AAAcN,QAAAA;AAAd,OAAD,kBAC3C;AAAK,QAAA,GAAG,EAAEK,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,GAAEC,MAAO,OAAMD,EAAG,EAAvB,CADF,CADK,CAAP;AAMD,KAzBH,CADA,CADA;AA+BD;;AAjCqC;;AAoCtC,eAAeV,OAAf","sourcesContent":["import React from 'react';\nimport { Query } from \"react-apollo\";\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nclass Courses extends React.Component {\n  render(){\n  return (\n  <div> \n  <Query\n    query={gql`\n      query{\n        responseHeader(row:\"7\",query:\"jokowi\"){\n          response{\n            numFound\n            docs{\n              source\n              id\n              \n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.responseHeader.response.docs.map(({ id, source, data }) => (\n        <div key={id}>\n          <p>{`${source} by ${id}`}</p>\n        </div>\n        \n      ));\n    }}\n  </Query>\n  </div>\n)\n}\n}\n\nexport default Courses"]},"metadata":{},"sourceType":"module"}