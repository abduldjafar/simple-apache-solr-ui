{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 800\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nexport default function App() {\n  const SOLR_QUERY = gql`\nquery{\n  responseHeader(row:\"7\",$query: String){\n    response{\n      numFound\n      docs{\n        source\n        id\n      }\n    }\n  }\n}\n`;\n  const [value, setValue] = React.useState();\n\n  const onSubmit = e => {\n    const {\n      filter\n    } = this.state;\n    e.preventDefault();\n    const result = client.query({\n      query: SOLR_QUERY,\n      variables: {\n        value\n      }\n    });\n    console.log(result);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"form\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.input,\n    placeholder: \"Solr Search\",\n    inputProps: {\n      \"aria-label\": \"search google maps\"\n    },\n    onChange: event => {\n      //adding the onChange event\n      setValue(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n}\n;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js"],"names":["React","Component","ApolloClient","ApolloProvider","Paper","InputBase","IconButton","SearchIcon","makeStyles","gql","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","client","uri","App","SOLR_QUERY","value","setValue","useState","onSubmit","e","filter","state","preventDefault","result","query","variables","console","log","classes","event","target"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 800\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\n\n\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nexport default function App() {\n  const SOLR_QUERY = gql`\nquery{\n  responseHeader(row:\"7\",$query: String){\n    response{\n      numFound\n      docs{\n        source\n        id\n      }\n    }\n  }\n}\n`\n  const [value, setValue] = React.useState()\n\n\n  const onSubmit = e => {\n    const { filter } = this.state\n\n    e.preventDefault();\n    const result = client.query({\n      query: SOLR_QUERY,\n      variables: { value },\n    })\n\n    console.log(result)\n  };\n\n  const classes = useStyles();\n\n  return (\n    <ApolloProvider client={client}>\n \n      <Paper component=\"form\" className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Solr Search\"\n          inputProps={{ \"aria-label\": \"search google maps\" }}\n          onChange={event=>{                                 //adding the onChange event\n            setValue(event.target.value)\n          }}\n          \n        />\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick= {onSubmit} >\n          <SearchIcon />\n        </IconButton>\n    </Paper>\n\n  </ApolloProvider>\n  \n)};"]},"metadata":{},"sourceType":"module"}