{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nconst Courses = () => /*#__PURE__*/React.createElement(Query, {\n  query: gql`\n      {\n        allCourses {\n          id\n          title\n          author\n          description\n          topic\n          url\n        }\n      }\n    `,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, \"Error :(\");\n  return data.allCourses.map(({\n    id,\n    title,\n    author,\n    description,\n    topic,\n    url\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, `${title} by ${author}`)));\n});\n\nexport default Courses;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Query","gql","Courses","loading","error","data","allCourses","map","id","title","author","description","topic","url"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AACA,MAAMC,OAAO,GAAG,mBACd,oBAAC,KAAD;AACE,EAAA,KAAK,EAAED,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAcG,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SAAOC,IAAI,CAACC,UAAL,CAAgBC,GAAhB,CAAoB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,WAArB;AAAkCC,IAAAA,KAAlC;AAAyCC,IAAAA;AAAzC,GAAD,kBACzB;AAAK,IAAA,GAAG,EAAEL,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,GAAEC,KAAM,OAAMC,MAAO,EAA1B,CADF,CADK,CAAP;AAKD,CAtBH,CADF;;AA0BA,eAAeR,OAAf","sourcesContent":["import React from 'react';\nimport { Query } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nconst Courses = () => (\n  <Query\n    query={gql`\n      {\n        allCourses {\n          id\n          title\n          author\n          description\n          topic\n          url\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.allCourses.map(({ id, title, author, description, topic, url }) => (\n        <div key={id}>\n          <p>{`${title} by ${author}`}</p>\n        </div>\n      ));\n    }}\n  </Query>\n);\nexport default Courses;"]},"metadata":{},"sourceType":"module"}