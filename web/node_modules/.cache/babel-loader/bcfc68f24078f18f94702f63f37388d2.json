{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography'; //import Courses from './Courses'\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    alignItems: \"center\"\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 700,\n    margin: `${theme.spacing()}px auto`\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 2,\n    alignItems: \"center\"\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    margin: `${theme.spacing()}px auto`\n  },\n  paper: {\n    maxWidth: 700,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2)\n  },\n  section1: {\n    margin: theme.spacing(3, 2)\n  },\n  section2: {\n    margin: theme.spacing(2)\n  }\n}));\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nexport const getSolrData = gql`\n      query Data($query: String){\n        responseHeader(row: \"7\", query: $query){\n          response{\n            numFound\n            docs{\n              articleid\n              content\n              title\n              datee\n            }\n          }\n        }\n      }\n      `;\nexport default function App() {\n  const [value, setValue] = React.useState();\n\n  const onSubmit = e => {\n    e.PreventDefault();\n    alert(value);\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Kotekaman Search Engine\")), /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"form\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    className: classes.input,\n    placeholder: \"Solr Search\",\n    inputProps: {\n      \"aria-label\": \"search google maps\"\n    },\n    onChange: event => {\n      //adding the onChange event\n      setValue(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    onClick: onSubmit,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Query, {\n    query: getSolrData,\n    variables: {\n      query: value\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 27\n      }\n    }, \"Loading...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, \"Error :(\");\n    return data.responseHeader.response.docs.map(({\n      articleid,\n      content,\n      title\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: articleid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 67\n      }\n    }, title))))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.Divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, content)))))));\n  })));\n}\n;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js"],"names":["React","ApolloClient","ApolloProvider","Divider","Paper","InputBase","IconButton","SearchIcon","makeStyles","gql","Query","Grid","Typography","useStyles","theme","heading","alignItems","root","padding","display","width","margin","spacing","input","marginLeft","flex","iconButton","divider","paper","maxWidth","section1","section2","client","uri","getSolrData","App","value","setValue","useState","onSubmit","e","PreventDefault","alert","classes","event","target","query","loading","error","data","responseHeader","response","docs","map","articleid","content","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n//import Courses from './Courses'\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  heading:{\n    alignItems: \"center\"\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 700,\n    margin: `${theme.spacing()}px auto`\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 2,\n    alignItems: \"center\"\n\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    margin: `${theme.spacing()}px auto`\n  },\n  paper: {\n    maxWidth: 700,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n  }\n}));\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nexport const getSolrData = gql`\n      query Data($query: String){\n        responseHeader(row: \"7\", query: $query){\n          response{\n            numFound\n            docs{\n              articleid\n              content\n              title\n              datee\n            }\n          }\n        }\n      }\n      `;\n\nexport default function App() {\n  const [value, setValue] = React.useState()\n\n  const onSubmit =  e => {\n    e.PreventDefault();\n    alert(value)  \n  };\n\n  const classes = useStyles();\n\n  return (\n      \n      <div>\n        <div className={classes.root}>\n        <Typography variant=\"h2\">Kotekaman Search Engine</Typography>\n       </div>\n      <ApolloProvider client={client}>\n      <Paper component=\"form\" className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Solr Search\"\n          inputProps={{ \"aria-label\": \"search google maps\" }}\n          onChange={event=>{ //adding the onChange event\n            setValue(event.target.value)\n          }}\n          \n        />\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick= {onSubmit} color=\"primary\" >\n          <SearchIcon />\n        </IconButton>\n    </Paper>\n    <Query query={getSolrData} variables={{ query: value }}>\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.responseHeader.response.docs.map(({ articleid, content, title }) => (\n        <div key={articleid}>\n            <Paper className={classes.paper}>\n            <div className={classes.section1}>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography color=\"textSecondary\" variant=\"body2\"><b>{title}</b></Typography>\n              </Grid>\n            </Grid>\n            </div>\n            <Divider variant=\"middle\" className={classes.Divider} />\n            <div className={classes.section2}>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography noWrap>{content}</Typography>\n              </Grid>\n            </Grid>\n            </div>\n          </Paper>\n        </div>\n      ));\n    }}\n\n    </Query>\n    </ApolloProvider>\n    </div>\n\n    \n  \n  \n)};"]},"metadata":{},"sourceType":"module"}