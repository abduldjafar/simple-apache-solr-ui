{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/web/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Solr from './Solr';\nimport Style from './Style';\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nexport default function App() {\n  const [value, setValue] = React.useState();\n  const [start, setStart] = React.useState(0);\n  const [row, setRow] = React.useState(5);\n  const [page, setPage] = React.useState(1);\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {};\n\n  const onSubmit = e => {\n    e.PreventDefault();\n  };\n\n  const classes = Style();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 34\n    }\n  }, \"KSearchE\"))), /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"form\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    classes: {\n      root: classes.input\n    },\n    placeholder: \"Search\",\n    inputProps: {\n      \"aria-label\": \"search google maps\"\n    },\n    onChange: event => {\n      //adding the onChange event\n      setValue(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.section3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Solr, {\n    query: value,\n    row: row.toString(),\n    start: start.toString(),\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    className: classes.paper,\n    checked: checked,\n    count: 10,\n    page: Number(page),\n    siblingCount: 1,\n    boundaryCount: 1,\n    variant: \"outlined\",\n    shape: \"rounded\",\n    onChange: (event, value) => {\n      //adding the onChange event\n      setChecked(prev => !prev);\n      setPage(value);\n\n      if (value == 1) {\n        setStart(0);\n      } else {\n        setStart(value * 5 - 5);\n      }\n\n      setRow(5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })));\n}\n;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/web/src/App.js"],"names":["React","ApolloClient","ApolloProvider","Divider","Paper","InputBase","SearchIcon","makeStyles","Typography","IconButton","Pagination","Solr","Style","client","uri","App","value","setValue","useState","start","setStart","row","setRow","page","setPage","checked","setChecked","handleChange","onSubmit","e","PreventDefault","classes","heading","root","input","event","target","iconButton","section3","toString","paper","Number","prev"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Solr from './Solr'\nimport Style from './Style'\n\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\n\nexport default function App() {\n  const [value, setValue] = React.useState()\n  const [start, setStart] = React.useState(0);\n  const [row, setRow] = React.useState(5);\n  const [page, setPage] = React.useState(1);\n  const [checked, setChecked] = React.useState(false);\n\n  const handleChange = () => {\n    \n  };\n\n\n  const onSubmit =  e => {\n    e.PreventDefault();\n  };\n\n  \n  const classes = Style();\n\n  return (\n      \n      <div>\n        <div className={classes.heading}>\n        <Typography variant=\"h5\"><b>KSearchE</b></Typography>\n        </div>\n        <ApolloProvider client={client}>\n        \n        <Paper component=\"form\" className={classes.root}>\n          <InputBase\n            classes={{root:classes.input}}\n            placeholder=\"Search\"\n            inputProps={{ \"aria-label\": \"search google maps\" }}\n            onChange={event=>{ //adding the onChange event\n              setValue(event.target.value)\n            }}\n            \n          />\n          <IconButton type=\"submit\"  color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick= {onSubmit} > \n            <SearchIcon/>\n          </IconButton>\n      </Paper>\n      <Divider className={classes.section3} />   \n      <Solr query={value} row={row.toString()} start={start.toString()} client={client}/>\n      <Pagination\n              className={classes.paper}\n              checked={checked}\n              count={10}\n              page={Number(page)}\n              siblingCount={1}\n              boundaryCount={1}\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={(event, value) =>{ //adding the onChange event\n                setChecked((prev) => !prev);\n                setPage(value)\n\n                if (value == 1) {\n                  setStart(0)\n                } else {\n                  setStart((value*5)-5)\n                }\n                setRow(5)\n                \n              }}\n            />\n      </ApolloProvider>\n    </div>\n\n    \n  \n  \n)};\n\n"]},"metadata":{},"sourceType":"module"}