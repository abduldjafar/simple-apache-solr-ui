{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Solr.js\";\nimport React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport Style from './Style';\n\nclass Solr extends Component {\n  render() {\n    const {\n      classes\n    } = Style;\n    return /*#__PURE__*/React.createElement(Query, {\n      query: this.props.getSolrData,\n      variables: {\n        query: this.props.value\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 31\n        }\n      }, \"Loading...\");\n      if (error) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }\n      }, \"Error :(\");\n      return data.responseHeader.response.docs.map(({\n        id,\n        data,\n        resource\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.section1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        color: \"textSecondary\",\n        variant: \"body2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: resource,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }, \" \", /*#__PURE__*/React.createElement(InsertDriveFileIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 57\n        }\n      })))))), /*#__PURE__*/React.createElement(Divider, {\n        variant: \"middle\",\n        className: classes.Divider,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.section2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, data)))))));\n    });\n  }\n\n}\n\nexport default Solr;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Solr.js"],"names":["React","Component","Query","Grid","Typography","InsertDriveFileIcon","Divider","Paper","Style","Solr","render","classes","props","getSolrData","query","value","loading","error","data","responseHeader","response","docs","map","id","resource","paper","section1","section2"],"mappings":"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","sourcesContent":["import React, { Component} from 'react';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport Style from './Style'\n\n\nclass Solr extends Component{\n    render(){\n      const { classes } = Style\n        return <Query query={this.props.getSolrData} variables={{ query: this.props.value }}>\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error :(</p>;\n          return data.responseHeader.response.docs.map(({ id, data, resource }) => (\n            <div key={id}>\n                <Paper className={classes.paper}>\n                <div className={classes.section1}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap color=\"textSecondary\" variant=\"body2\"> \n                    <a href={resource} target=\"_blank\"> <InsertDriveFileIcon /></a>\n                    </Typography>\n                  </Grid>\n                </Grid>\n                </div>\n                <Divider variant=\"middle\" className={classes.Divider} />\n                <div className={classes.section2}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap>{data}</Typography>\n                  </Grid>\n                </Grid>\n                </div>\n              </Paper>\n            </div>\n          ));\n        }}\n      </Query>\n    }\n}\n\nexport default Solr"]},"metadata":{},"sourceType":"module"}