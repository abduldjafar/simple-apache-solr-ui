{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport getSolrData from './queries';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\n\nclass Courses extends Component {\n  displayBookDetails() {\n    const {\n      data\n    } = this.props.data;\n\n    if (data) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, data.responseHeader.response.docs.map((id, source, data) => /*#__PURE__*/React.createElement(Paper, {\n        className: \"paper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, data))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 40\n        }\n      }, source)))))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      }, \"None...\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"book-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, this.displayBookDetails()));\n  }\n\n} //export default () => {\n//const classes = useStyles();\n//return (\n//  <Courses classes={classes} />\n//)\n//}\n\n\nexport default graphql(getSolrData, {\n  options: props => {\n    //const classes = useStyles();\n    return {\n      variables: {\n        query: props.query\n      }\n    };\n  }\n})(Courses);","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Component","Query","graphql","gql","Paper","Grid","Typography","makeStyles","getSolrData","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","Courses","displayBookDetails","data","props","responseHeader","response","docs","map","id","source","render","options","variables","query"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport getSolrData  from './queries';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\n\nclass Courses extends Component  {\n  \n  displayBookDetails(){\n    const { data } = this.props.data;\n    if(data){\n        return(\n          <div>\n          { data.responseHeader.response.docs.map( (id,source,data) => \n                <Paper className=\"paper\">\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap>{data}</Typography>\n                  </Grid>\n                </Grid>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap><a href={source}>{source}</a></Typography>\n                  </Grid>\n                </Grid>\n              </Paper>\n          )}\n          </div>\n         \n        );\n    } else {\n        return( <div>None...</div> );\n    }\n}\n\n  render(){\n  \n    return (\n        <div> \n          <div id=\"book-details\">\n                { this.displayBookDetails() }\n            </div>\n        </div>\n    )\n  }\n}\n\n//export default () => {\n  //const classes = useStyles();\n  //return (\n    //  <Courses classes={classes} />\n  //)\n//}\n\nexport default graphql(getSolrData, {\n  options: (props) => {\n    //const classes = useStyles();\n      return {\n          variables: {\n              query: props.query\n          }\n      }\n  }\n})(Courses);"]},"metadata":{},"sourceType":"module"}