{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getSolrData } from '../queries/queries';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\n\nclass Courses extends Component {\n  displayBookDetails() {\n    const {\n      data\n    } = this.props.data;\n\n    if (book) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, book.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, book.genre), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, book.author.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, \"All books by this author:\"), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"other-books\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      }, book.author.books.map(item => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: item.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }\n        }, item.name);\n      })));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, \"No book selected...\");\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 3\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 27\n        }\n      }, \"Loading...\");\n      if (error) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, \"Error :(\");\n      return data.responseHeader.response.docs.map(({\n        id,\n        source,\n        data\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, data))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 36\n        }\n      }, source)))))));\n    });\n  }\n\n} //export default () => {\n//const classes = useStyles();\n//return (\n//  <Courses classes={classes} />\n//)\n//}\n\n\nexport default graphql(getSolrData, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(Courses);","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Component","Query","graphql","gql","Paper","Grid","Typography","makeStyles","getSolrData","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","Courses","displayBookDetails","data","props","book","name","genre","author","books","map","item","id","render","classes","loading","error","responseHeader","response","docs","source","options","variables","bookId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getSolrData } from '../queries/queries';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\n\nclass Courses extends Component  {\n  \n  displayBookDetails(){\n    const { data } = this.props.data;\n    if(book){\n        return(\n            <div>\n                <h2>{ book.name }</h2>\n                <p>{ book.genre }</p>\n                <p>{ book.author.name }</p>\n                <p>All books by this author:</p>\n                <ul className=\"other-books\">\n                    { book.author.books.map(item => {\n                        return <li key={item.id}>{ item.name }</li>\n                    })}\n                </ul>\n            </div>\n        );\n    } else {\n        return( <div>No book selected...</div> );\n    }\n}\n\n  render(){\n    \n    const classes = this.props.classes;\n  return (\n  <div> \n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.responseHeader.response.docs.map(({ id, source, data }) => (\n        <div key={id}>\n            <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography noWrap>{data}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography noWrap><a href={source}>{source}</a></Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </div>\n        \n      ));\n    }}\n  </div>\n)\n  }\n}\n\n//export default () => {\n  //const classes = useStyles();\n  //return (\n    //  <Courses classes={classes} />\n  //)\n//}\n\nexport default graphql(getSolrData, {\n  options: (props) => {\n      return {\n          variables: {\n              id: props.bookId\n          }\n      }\n  }\n})(Courses);"]},"metadata":{},"sourceType":"module"}