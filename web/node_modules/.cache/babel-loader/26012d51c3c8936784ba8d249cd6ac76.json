{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getSolrData } from '../queries/queries';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\n\nclass Courses extends Component {\n  displayBookDetails() {\n    const {\n      book\n    } = this.props.data;\n\n    if (book) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, data.responseHeader.response.docs.map(id => {\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          key: id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Paper, {\n          className: classes.paper,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          wrap: \"nowrap\",\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          noWrap: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, data))), /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          wrap: \"nowrap\",\n          spacing: 2,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Typography, {\n          noWrap: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: source,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 40\n          }\n        }, source))))));\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, \"No book selected...\");\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }\n    });\n  }\n\n} //export default () => {\n//const classes = useStyles();\n//return (\n//  <Courses classes={classes} />\n//)\n//}\n\n\nexport default graphql(getSolrData, {\n  options: props => {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(Courses);","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Component","Query","graphql","gql","Paper","Grid","Typography","makeStyles","getSolrData","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","Courses","displayBookDetails","book","props","data","responseHeader","response","docs","map","id","classes","source","render","options","variables","bookId"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from \"react-apollo\";\nimport { graphql } from 'react-apollo';\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getSolrData } from '../queries/queries';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\n\nclass Courses extends Component  {\n  \n  displayBookDetails(){\n    const { book } = this.props.data;\n    if(book){\n        return(\n          <div>\n          { data.responseHeader.response.docs.map( id => {\n            <div key={id}>\n                <Paper className={classes.paper}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap>{data}</Typography>\n                  </Grid>\n                </Grid>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap><a href={source}>{source}</a></Typography>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </div>\n    })}\n          </div>\n         \n        );\n    } else {\n        return( <div>No book selected...</div> );\n    }\n}\n\n  render(){\n    \n    const classes = this.props.classes;\n  return (\n  <div> \n    \n  </div>\n)\n  }\n}\n\n//export default () => {\n  //const classes = useStyles();\n  //return (\n    //  <Courses classes={classes} />\n  //)\n//}\n\nexport default graphql(getSolrData, {\n  options: (props) => {\n      return {\n          variables: {\n              id: props.bookId\n          }\n      }\n  }\n})(Courses);"]},"metadata":{},"sourceType":"module"}