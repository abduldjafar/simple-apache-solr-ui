{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Solr.js\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport Style from './Style';\nimport getSolrData from './queries';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useQuery from \"@apollo/client\";\nexport default function Solr(props) {\n  const classes = Style();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(getSolrData, {\n    variables: {\n      query: props.query,\n      row: props.row\n    }\n  });\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 27\n    }\n  }, \"Error :(\");\n  return data.responseHeader.response.docs.map(({\n    id,\n    data,\n    resource\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    noWrap: true,\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: resource,\n    target: \"_blank\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(InsertDriveFileIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 57\n    }\n  })))))), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"middle\",\n    className: classes.Divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.section2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    wrap: \"nowrap\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: data,\n    classes: {\n      tooltip: classes.customWidth\n    },\n    placement: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    noWrap: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, data))))))));\n}","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Solr.js"],"names":["React","Query","Grid","Typography","InsertDriveFileIcon","Divider","Paper","Style","getSolrData","Tooltip","useQuery","Solr","props","classes","loading","error","data","variables","query","row","responseHeader","response","docs","map","id","resource","paper","section1","section2","tooltip","customWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport Style from './Style'\nimport getSolrData from './queries'\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useQuery from  \"@apollo/client\";\n\nexport default function Solr(props){\n\n        const classes = Style();\n        const { loading, error, data } = useQuery(getSolrData, {\n          variables:{query: props.query,row: props.row},\n        });\n        if (loading) return <p>Loading...</p>;\n        if (error) return <p>Error :(</p>;\n        return (\n          data.responseHeader.response.docs.map(({ id, data, resource }) => (\n            <div key={id}>\n                <Paper className={classes.paper}>\n                <div className={classes.section1}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap color=\"textSecondary\" variant=\"body2\"> \n                    <a href={resource} target=\"_blank\"> <InsertDriveFileIcon /></a>\n                    </Typography>\n                  </Grid>\n                </Grid>\n                </div>\n                <Divider variant=\"middle\" className={classes.Divider} />\n                <div className={classes.section2}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                  <Tooltip title={data} classes={{ tooltip: classes.customWidth }} placement=\"left\">\n                    <Typography noWrap>{data}</Typography>\n                  </Tooltip>\n                  </Grid>\n                </Grid>\n                </div>\n              </Paper>\n            </div>\n          ))\n      )\n  }\n\n"]},"metadata":{},"sourceType":"module"}