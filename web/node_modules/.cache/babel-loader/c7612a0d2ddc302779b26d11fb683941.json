{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React from 'react';\nimport { Query } from \"react-apollo\";\nimport { gql } from '@apollo/client';\n\nconst Courses = () => /*#__PURE__*/React.createElement(Query, {\n  query: gql`\n      query{\n        responseHeader{\n            response{\n                docs{\n                      data\n                      source\n                      id\n                    }\n                }\n            }\n        }\n    `,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 3\n  }\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 27\n    }\n  }, \"Loading...\");\n  if (error) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, \"Error :(\");\n  return data.responseHeader.response.docs.map(({\n    id,\n    source,\n    data\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, `${source} by ${data}`)));\n});\n\nexport default Courses;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Query","gql","Courses","loading","error","data","responseHeader","response","docs","map","id","source"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,GAAT,QAAoB,gBAApB;;AACA,MAAMC,OAAO,GAAG,mBACd,oBAAC,KAAD;AACE,EAAA,KAAK,EAAED,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAbE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAeG,CAAC;AAAEE,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,KAA8B;AAC7B,MAAIF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SAAOC,IAAI,CAACC,cAAL,CAAoBC,QAApB,CAA6BC,IAA7B,CAAkCC,GAAlC,CAAsC,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,MAAN;AAAcN,IAAAA;AAAd,GAAD,kBAC3C;AAAK,IAAA,GAAG,EAAEK,EAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,GAAEC,MAAO,OAAMN,IAAK,EAAzB,CADF,CADK,CAAP;AAKD,CAvBH,CADF;;AA2BA,eAAeH,OAAf","sourcesContent":["import React from 'react';\nimport { Query } from \"react-apollo\";\nimport { gql } from '@apollo/client';\nconst Courses = () => (\n  <Query\n    query={gql`\n      query{\n        responseHeader{\n            response{\n                docs{\n                      data\n                      source\n                      id\n                    }\n                }\n            }\n        }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.responseHeader.response.docs.map(({ id, source, data }) => (\n        <div key={id}>\n          <p>{`${source} by ${data}`}</p>\n        </div>\n      ));\n    }}\n  </Query>\n);\nexport default Courses;"]},"metadata":{},"sourceType":"module"}