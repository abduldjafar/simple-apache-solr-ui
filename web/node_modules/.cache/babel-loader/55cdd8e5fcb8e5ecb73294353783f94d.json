{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 800\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\nconst SOLR_QUERY = gql`\nquery{\n  responseHeader(row:\"7\",$query:String){\n    response{\n      numFound\n      docs{\n        source\n        id\n      }\n    }\n  }\n}\n`;\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nclass Apps extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      links: [],\n      filter: ''\n    };\n\n    this.onSubmit = e => {\n      const {\n        filter\n      } = this.state;\n      e.preventDefault();\n      const result = client.query({\n        query: SOLR_QUERY,\n        variables: {\n          filter\n        }\n      });\n      console.log(result);\n    };\n\n    this.classes = useStyles();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ApolloProvider, {\n      client: client,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      component: \"form\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(InputBase, {\n      className: classes.input,\n      placeholder: \"Solr Search\",\n      inputProps: {\n        \"aria-label\": \"search google maps\"\n      },\n      onChange: event => {\n        //adding the onChange event\n        setValue(event.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      type: \"submit\",\n      className: classes.iconButton,\n      \"aria-label\": \"search\",\n      onClick: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\n;\nexport default Apps;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js"],"names":["React","Component","ApolloClient","ApolloProvider","Paper","InputBase","IconButton","SearchIcon","makeStyles","gql","useStyles","theme","root","padding","display","alignItems","width","input","marginLeft","spacing","flex","iconButton","divider","height","margin","SOLR_QUERY","client","uri","Apps","state","links","filter","onSubmit","e","preventDefault","result","query","variables","console","log","classes","render","event","setValue","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,QAAoB,gBAApB;AAIA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,SADL;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,UAAU,EAAE,QAHR;AAIJC,IAAAA,KAAK,EAAE;AAJH,GADiC;AAOvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADP;AAELC,IAAAA,IAAI,EAAE;AAFD,GAPgC;AAWvCC,EAAAA,UAAU,EAAE;AACVR,IAAAA,OAAO,EAAE;AADC,GAX2B;AAcvCS,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,MAAM,EAAE;AAFD;AAd8B,CAAZ,CAAD,CAA5B;AAqBA,MAAMC,UAAU,GAAGhB,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAZA;AAaA,MAAMiB,MAAM,GAAG,IAAIxB,YAAJ,CAAiB;AAC9ByB,EAAAA,GAAG,EAAE;AADyB,CAAjB,CAAf;;AAIA,MAAMC,IAAN,SAAmB3B,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAG3B4B,KAH2B,GAGnB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAHmB;;AAAA,SAQ3BC,QAR2B,GAQhBC,CAAC,IAAI;AACd,YAAM;AAAEF,QAAAA;AAAF,UAAa,KAAKF,KAAxB;AAEAI,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,MAAM,GAAGT,MAAM,CAACU,KAAP,CAAa;AAC1BA,QAAAA,KAAK,EAAEX,UADmB;AAE1BY,QAAAA,SAAS,EAAE;AAAEN,UAAAA;AAAF;AAFe,OAAb,CAAf;AAKAO,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACD,KAlB0B;;AAAA,SAoB3BK,OApB2B,GAoBjB9B,SAAS,EApBQ;AAAA;;AAsB3B+B,EAAAA,MAAM,GAAE;AACR,wBACE,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEf,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,MAAjB;AAAwB,MAAA,SAAS,EAAEc,OAAO,CAAC5B,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,SAAS,EAAE4B,OAAO,CAACvB,KADrB;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAHd;AAIE,MAAA,QAAQ,EAAEyB,KAAK,IAAE;AAAkC;AACjDC,QAAAA,QAAQ,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAR;AACD,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAUE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,QAAjB;AAA0B,MAAA,SAAS,EAAEL,OAAO,CAACnB,UAA7C;AAAyD,oBAAW,QAApE;AAA6E,MAAA,OAAO,EAAGW,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CAFF,CADF;AAqBI;;AA5CuB;;AA8C5B;AAED,eAAeJ,IAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 800\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}));\n\n\nconst SOLR_QUERY = gql`\nquery{\n  responseHeader(row:\"7\",$query:String){\n    response{\n      numFound\n      docs{\n        source\n        id\n      }\n    }\n  }\n}\n`\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n})\n\nclass Apps extends Component {\n  \n\n  state = {\n    links: [],\n    filter: '',\n  }\n\n  onSubmit = e => {\n    const { filter } = this.state\n\n    e.preventDefault();\n    const result = client.query({\n      query: SOLR_QUERY,\n      variables: { filter },\n    })\n\n    console.log(result)\n  };\n\n  classes = useStyles();\n\n  render(){\n  return (\n    <ApolloProvider client={client}>\n \n      <Paper component=\"form\" className={classes.root}>\n        <InputBase\n          className={classes.input}\n          placeholder=\"Solr Search\"\n          inputProps={{ \"aria-label\": \"search google maps\" }}\n          onChange={event=>{                                 //adding the onChange event\n            setValue(event.target.value)\n          }}\n          \n        />\n        <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\" onClick= {onSubmit} >\n          <SearchIcon />\n        </IconButton>\n    </Paper>\n\n  </ApolloProvider>\n  \n)\n     }\n\n};\n\nexport default Apps"]},"metadata":{},"sourceType":"module"}