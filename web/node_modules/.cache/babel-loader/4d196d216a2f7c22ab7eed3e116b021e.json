{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Pagination from \"@material-ui/lab/Pagination\";\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    alignItems: \"center\",\n    fontSize: 33,\n    fontWeight: 300,\n    letterSpacing: \"0.0075em\",\n    verticalAlign: \"middle\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    color: '#2196F3'\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 700,\n    margin: `${theme.spacing()}px auto`\n  },\n  input: {\n    flex: 2,\n    alignItems: \"center\",\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\n    borderTopLeftRadius: '4px',\n    borderTopRightRadius: '4px'\n  },\n  iconButton: {\n    //padding: 5,\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 1,\n    boxShadow: '1 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 40,\n    padding: '0px 10px'\n  },\n  divider: {\n    margin: `${theme.spacing()}px auto`\n  },\n  paper: {\n    maxWidth: 700,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2)\n  },\n  section1: {\n    margin: theme.spacing(1, 2)\n  },\n  section2: {\n    margin: theme.spacing(2)\n  },\n  section3: {\n    margin: theme.spacing(2),\n    //background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 1,\n    boxShadow: '1 3px 5px 2px rgba(255, 105, 135, .3)'\n  },\n  buttons: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  }\n}));\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\nexport const getSolrData = gql`\n      query Data($query: String){\n        responseHeader(row: \"7\", query: $query){\n          response{\n            numFound\n            docs{\n              articleid\n              content\n              title\n              datee\n            }\n          }\n        }\n      }\n      `;\nexport default function App() {\n  const [value, setValue] = React.useState();\n  const [start, setStart] = React.useState();\n  const [rows, setRows] = React.useState();\n\n  const onSubmit = e => {\n    e.PreventDefault();\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 34\n    }\n  }, \"KSearchE\"))), /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"form\",\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputBase, {\n    classes: {\n      root: classes.input\n    },\n    placeholder: \"Search\",\n    inputProps: {\n      \"aria-label\": \"search google maps\"\n    },\n    onChange: event => {\n      //adding the onChange event\n      setValue(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    type: \"submit\",\n    color: \"primary\",\n    className: classes.iconButton,\n    \"aria-label\": \"search\",\n    onClick: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.section3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Query, {\n    query: getSolrData,\n    variables: {\n      query: value\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, ({\n    loading,\n    error,\n    data\n  }) => {\n    if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (error) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, \"Error :(\");\n    return data.responseHeader.response.docs.map(({\n      articleid,\n      content,\n      title\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      key: articleid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      color: \"textSecondary\",\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, title))))), /*#__PURE__*/React.createElement(Divider, {\n      variant: \"middle\",\n      className: classes.Divider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.section2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      wrap: \"nowrap\",\n      spacing: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      noWrap: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, content)))))));\n  })));\n}\n;","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/App.js"],"names":["React","ApolloClient","ApolloProvider","Divider","Paper","InputBase","SearchIcon","makeStyles","gql","Query","Grid","Typography","IconButton","Pagination","useStyles","theme","heading","alignItems","fontSize","fontWeight","letterSpacing","verticalAlign","textAlign","color","root","padding","display","width","margin","spacing","input","flex","paddingLeft","borderTopLeftRadius","borderTopRightRadius","iconButton","background","border","boxShadow","height","divider","paper","maxWidth","section1","section2","section3","buttons","client","uri","getSolrData","App","value","setValue","useState","start","setStart","rows","setRows","onSubmit","e","PreventDefault","classes","event","target","query","loading","error","data","responseHeader","response","docs","map","articleid","content","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport Divider from '@material-ui/core/Divider';\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { gql } from '@apollo/client';\nimport { Query } from \"react-apollo\";\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Pagination from \"@material-ui/lab/Pagination\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  heading:{\n    alignItems: \"center\",\n    fontSize: 33,\n    fontWeight: 300,\n    letterSpacing: \"0.0075em\",\n    verticalAlign: \"middle\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    color:'#2196F3'\n  },\n  root: {\n    padding: \"2px 4px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 700,\n    margin: `${theme.spacing()}px auto`\n  },\n  input: {\n    flex: 2,\n    alignItems: \"center\",\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\n    borderTopLeftRadius: '4px',\n    borderTopRightRadius: '4px'\n  },\n  iconButton: {\n    //padding: 5,\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 1,\n    \n    boxShadow: '1 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height:40,\n    padding: '0px 10px'\n  },\n  divider: {\n    margin: `${theme.spacing()}px auto`\n  },\n  paper: {\n    maxWidth: 700,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2),\n  },\n  section1: {\n    margin: theme.spacing(1, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n    \n  },\n  section3: {\n    margin: theme.spacing(2),\n    //background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 1,\n    \n    boxShadow: '1 3px 5px 2px rgba(255, 105, 135, .3)'\n    \n  },\n  buttons: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  }\n}));\n\nconst client = new ApolloClient({\n  uri: \"http://localhost:4000/\"\n});\n\nexport const getSolrData = gql`\n      query Data($query: String){\n        responseHeader(row: \"7\", query: $query){\n          response{\n            numFound\n            docs{\n              articleid\n              content\n              title\n              datee\n            }\n          }\n        }\n      }\n      `;\n\nexport default function App() {\n  const [value, setValue] = React.useState()\n  const [start, setStart] = React.useState()\n  const [rows, setRows] = React.useState()\n\n  const onSubmit =  e => {\n    e.PreventDefault();\n  };\n\n\n  const classes = useStyles();\n\n  return (\n      \n      <div>\n        <div className={classes.heading}>\n        <Typography variant=\"h5\"><b>KSearchE</b></Typography>\n        </div>\n        <ApolloProvider client={client}>\n        <Paper component=\"form\" className={classes.root}>\n          <InputBase\n            classes={{root:classes.input}}\n            placeholder=\"Search\"\n            inputProps={{ \"aria-label\": \"search google maps\" }}\n            onChange={event=>{ //adding the onChange event\n              setValue(event.target.value)\n            }}\n            \n          />\n          <IconButton type=\"submit\"  color=\"primary\" className={classes.iconButton} aria-label=\"search\" onClick= {onSubmit} > \n            <SearchIcon/>\n          </IconButton>\n      </Paper>\n      <Divider className={classes.section3} />\n      <Query query={getSolrData} variables={{ query: value }}>\n        {({ loading, error, data }) => {\n          if (loading) return <p>Loading...</p>;\n          if (error) return <p>Error :(</p>;\n          return data.responseHeader.response.docs.map(({ articleid, content, title }) => (\n            <div key={articleid}>\n                <Paper className={classes.paper}>\n                <div className={classes.section1}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography color=\"textSecondary\" variant=\"body2\">\n                      <b>{title}</b>\n                    </Typography>\n                  </Grid>\n                </Grid>\n                </div>\n                <Divider variant=\"middle\" className={classes.Divider} />\n                <div className={classes.section2}>\n                <Grid container wrap=\"nowrap\" spacing={2}>\n                  <Grid item xs={12}>\n                    <Typography noWrap>{content}</Typography>\n                  </Grid>\n                </Grid>\n                </div>\n              </Paper>\n            </div>\n          ));\n        }}\n      </Query>\n      \n      </ApolloProvider>\n    </div>\n\n    \n  \n  \n)};"]},"metadata":{},"sourceType":"module"}