{"ast":null,"code":"var _jsxFileName = \"/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js\";\nimport React, { Component } from 'react';\nimport { Query } from \"react-apollo\";\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\n\nclass Courses extends Component {\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(Query, {\n      query: gql`\n      query{\n        responseHeader(row:\"7\",query:{this.props.value}){\n          response{\n            numFound\n            docs{\n              source\n              id\n              data\n            }\n          }\n        }\n      }\n    `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 3\n      }\n    }, ({\n      loading,\n      error,\n      data\n    }) => {\n      if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 27\n        }\n      }, \"Loading...\");\n      if (error) return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, \"Error :(\");\n      return data.responseHeader.response.docs.map(({\n        id,\n        source,\n        data\n      }) => /*#__PURE__*/React.createElement(\"div\", {\n        key: id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        className: classes.paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, data))), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Typography, {\n        noWrap: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: source,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 36\n        }\n      }, source)))))));\n    }));\n  }\n\n}\n\nexport default (() => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Courses, {\n    classes: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  });\n});","map":{"version":3,"sources":["/Users/abdul/Documents/belajar/react/se-prototype-ip/src/Courses.js"],"names":["React","Component","Query","gql","Paper","Grid","Typography","makeStyles","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","Courses","render","classes","loading","error","data","responseHeader","response","docs","map","id","source"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Query } from \"react-apollo\";\nimport { gql } from '@apollo/client';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing()}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\n\n\n\nclass Courses extends Component  {\n  \n  \n  render(){\n    const classes = useStyles();\n  return (\n  <div> \n  <Query\n    query={gql`\n      query{\n        responseHeader(row:\"7\",query:{this.props.value}){\n          response{\n            numFound\n            docs{\n              source\n              id\n              data\n            }\n          }\n        }\n      }\n    `}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return <p>Loading...</p>;\n      if (error) return <p>Error :(</p>;\n      return data.responseHeader.response.docs.map(({ id, source, data }) => (\n        <div key={id}>\n            <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography noWrap>{data}</Typography>\n              </Grid>\n            </Grid>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n              <Grid item xs={12}>\n                <Typography noWrap><a href={source}>{source}</a></Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </div>\n        \n      ));\n    }}\n  </Query>\n  </div>\n)\n  }\n}\n\nexport default () => {\n  const classes = useStyles();\n  return (\n      <Courses classes={classes} />\n  )\n}"]},"metadata":{},"sourceType":"module"}